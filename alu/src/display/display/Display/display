//display

module display (input [7:0] V_SW, output [6:0] G_HEX0, output [6:0] G_HEX1);

 BCD BCD(.V_SW(V_SW [3:0]), .G_HEX(G_HEX0));
 BCD BCD2(.V_SW(V_SW [7:4]), .G_HEX(G_HEX1));

endmodule


---------------------
-------------------

//BCD

module BCD (V_SW, G_HEX /*0, G_HEX1, G_HEX2, G_HEX3*/);

  input wire [7:0] V_SW;
  output wire [6:0] G_HEX;

  wire [3:0] BCD; // V_SW
  reg [6:0] SSeg0; // G_HEX0
  
//  input wire [7:4] V_SW;
//  output wire [6:0] G_HEX;
  wire [7:4] BCD2; // V_SW
//  reg [6:0] SSeg0; // G_HEX1
  
  assign BCD = V_SW;
  assign BCD2 = V_SW;
//  assign G_HEX = SSeg0;
  assign G_HEX = SSeg0;

 always @ ( * ) 

 begin

  case (BCD)
    4'b0000: SSeg0 = 7'b1000000; // "0"  
    4'b0001: SSeg0 = 7'b1111001; // "1" 
    4'b0010: SSeg0 = 7'b0100100; // "2" 
    4'b0011: SSeg0 = 7'b0110000; // "3" 
    4'b0100: SSeg0 = 7'b0011001; // "4" 
    4'b0101: SSeg0 = 7'b0010010; // "5" 
    4'b0110: SSeg0 = 7'b0000010; // "6" 
    4'b0111: SSeg0 = 7'b1111000; // "7" 
    4'b1000: SSeg0 = 7'b0000000; // "8"  
    4'b1001: SSeg0 = 7'b0011000; // "9" 
    4'ha: SSeg0 = 7'b0001000; // "a" 
    4'hb: SSeg0 = 7'b0000011; // "b"
    4'hc: SSeg0 = 7'b0100111; // "c"
    4'hd: SSeg0 = 7'b0100001; // "d"
    4'he: SSeg0 = 7'b0000100; // "e"
    4'hf: SSeg0 = 7'b0001110; // "f"
    default: SSeg0 = 0;
  endcase
/*  case (BCD1)
    4'b0000: SSeg1 = 7'b1000000; // "0"  
    4'b0001: SSeg1 = 7'b1111001; // "1" 
    4'b0010: SSeg1 = 7'b0100100; // "2" 
    4'b0011: SSeg1 = 7'b0110000; // "3" 
    4'b0100: SSeg1 = 7'b0011001; // "4" 
    4'b0101: SSeg1 = 7'b0010010; // "5" 
    4'b0110: SSeg1 = 7'b0000010; // "6" 
    4'b0111: SSeg1 = 7'b1111000; // "7" 
    4'b1000: SSeg1 = 7'b0000000; // "8"  
    4'b1001: SSeg1 = 7'b0011000; // "9" 
    4'ha: SSeg1 = 7'b0001000; // "a" 
    4'hb: SSeg1 = 7'b0000011; // "b"
    4'hc: SSeg1 = 7'b0100111; // "c"
    4'hd: SSeg1 = 7'b0100001; // "d"
    4'he: SSeg1 = 7'b0000100; // "e"
    4'hf: SSeg1 = 7'b0001110; // "f"
    default: SSeg1 = 0;
  endcase*/
 end

endmodule